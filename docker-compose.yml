services:
  catalogdb:
    image: mongo
    networks:
      - shopwebservicenetwork
    
  basketdb:
    image: redis:alpine
    networks:
      - shopwebservicenetwork
    
  discountdb:
    image: postgres
    networks:
      - shopwebservicenetwork
    
  orderdb:
    image: mcr.microsoft.com/mssql/server:2017-latest
    networks:
      - shopwebservicenetwork
    
  rabbitmq:
    image: rabbitmq:3-management-alpine
    networks:
      - shopwebservicenetwork
    
  pgadmin:
    image: dpage/pgadmin4
    networks:
      - shopwebservicenetwork
    
  portainer:
    image: portainer/portainer-ce
    networks:
      - shopwebservicenetwork
      
  catalog.api:
    image: ${DOCKER_REGISTRY-}catalogapi
    networks:
      - shopwebservicenetwork
    build:
      context: .
      dockerfile: src/Services/Catalog/Catalog.API/Dockerfile
      
  #basket.api:
  #  image: ${DOCKER_REGISTRY-}basketapi
  #  build:
  #    context: .
  #    dockerfile: Services/Basket/Basket.API/Dockerfile   
      
  #discount.api:
  #  image: ${DOCKER_REGISTRY-}discountapi
  #  build:
  #    context: .
  #    dockerfile: Services/Discount/Discount.API/Dockerfile
      
  #ordering.api:
  #  image: ${DOCKER_REGISTRY-}orderingapi
  #  build:
  #    context: .
   #   dockerfile: Services/Ordering/Ordering.API/Dockerfile
      
  #ocelotapigw:
  #  image: ${DOCKER_REGISTRY-}ocelotapigw
  #  build:
  #    context: .
  #    dockerfile: ApiGateways/Ocelot.ApiGateway/Dockerfile
      
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.9.2
    networks:
      - shopwebservicenetwork

  kibana:
    image: docker.elastic.co/kibana/kibana:7.9.2
    networks:
      - shopwebservicenetwork
#  identityserver:
#    image: ${DOCKER_REGISTRY-}identityserver
#    build:
#      context: .
#      dockerfile: Infrastructure/EShopping.Identity/Dockerfile
      
networks:
  shopwebservicenetwork:
    driver: bridge

volumes:
  mongo_data:
  portainer_data:
  postgres_data:
  pgadmin_data:
  elasticsearch-data:  